# Terragon Autonomous SDLC Value Discovery Configuration
# Repository: llm-cost-tracker
# Maturity Level: Advanced (90%+)
# Enhancement Strategy: Continuous Value Discovery Loop

meta:
  repository: "llm-cost-tracker"
  maturity_level: "advanced"
  classification_score: 90
  last_assessment: "2025-08-01"
  enhancement_strategy: "continuous_value_discovery"

# Adaptive scoring weights based on repository maturity
scoring:
  weights:
    advanced:
      wsjf: 0.5          # Weighted Shortest Job First
      ice: 0.1           # Impact, Confidence, Ease
      technicalDebt: 0.3 # Technical debt impact
      security: 0.1      # Security priority boost
  
  thresholds:
    minScore: 15        # Minimum composite score for execution
    maxRisk: 0.8        # Maximum acceptable risk level
    securityBoost: 2.0  # Security vulnerability multiplier
    complianceBoost: 1.8 # Compliance issue multiplier

# Advanced signal discovery sources for mature repositories
discovery:
  sources:
    - gitHistory        # Git log analysis for TODO/FIXME/HACK
    - staticAnalysis    # Code quality and complexity metrics
    - issueTrackers     # GitHub issues and PR comments
    - vulnerabilityDatabases # CVE and security advisories
    - performanceMonitoring # Runtime performance metrics
    - dependencyAudits  # Package vulnerability scanning
    - codeComplexity    # Cyclomatic and cognitive complexity
    - testCoverage      # Coverage gaps and flaky tests
    - deploymentMetrics # Production stability indicators
  
  tools:
    staticAnalysis:
      - "bandit"        # Python security linter
      - "mypy"          # Type checking
      - "flake8"        # Code style and quality
      - "black"         # Code formatting
      - "isort"         # Import sorting
    security:
      - "safety"        # Dependency vulnerability scanner
      - "semgrep"       # Static application security testing
      - "trivy"         # Container security scanning
    performance:
      - "pytest-benchmark" # Performance regression testing
      - "memory-profiler"  # Memory usage analysis
    complexity:
      - "radon"         # Complexity metrics
      - "vulture"       # Dead code detection

# Execution parameters for advanced repositories
execution:
  maxConcurrentTasks: 1
  executionMode: "autonomous"
  testRequirements:
    minCoverage: 85     # Higher coverage requirement for advanced repos
    performanceRegression: 3 # Max 3% performance degradation
    securityGates: true
  rollbackTriggers:
    - testFailure
    - buildFailure
    - securityViolation
    - performanceRegression
  continuousExecution:
    enabled: true
    schedule:
      hourly: "security_scan"
      daily: "comprehensive_analysis"
      weekly: "architectural_review"
      monthly: "strategic_alignment"

# Advanced value metrics for mature repositories
valueMetrics:
  primary:
    - technical_debt_reduction
    - security_posture_improvement
    - performance_optimization
    - code_quality_enhancement
    - test_coverage_increase
  secondary:
    - developer_experience
    - operational_efficiency
    - maintainability_score
    - documentation_coverage
  businessAlignment:
    - customer_impact
    - revenue_enablement
    - cost_reduction
    - risk_mitigation

# Learning and adaptation parameters
learning:
  enabled: true
  adaptationCycles: 5
  accuracyThreshold: 0.8
  confidenceTracking: true
  patternRecognition: true
  
# Autonomous operation settings
autonomous:
  autoExecution: true
  requireApproval: false  # Advanced repos can run autonomously
  maxIterationsPerDay: 10
  emergencyStop:
    enabled: true
    triggers:
      - security_critical
      - production_outage
      - test_failure_cascade

# Integration settings for advanced tooling
integrations:
  github:
    createPRs: true
    assignReviewers: true
    addLabels: true
    linkIssues: true
  monitoring:
    enabled: true
    alerting: true
    metrics_export: true
  notifications:
    slack:
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
    email:
      enabled: false
      recipients: []