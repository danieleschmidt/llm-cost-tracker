# LLM Cost Tracker Environment Configuration
# Copy this file to .env and fill in your actual values

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/llm_metrics
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=llm_metrics
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# OpenTelemetry Configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=llm-cost-tracker
OTEL_RESOURCE_ATTRIBUTES=service.name=llm-cost-tracker,service.version=0.1.0

# LLM Provider API Keys (NEVER commit actual keys)
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here
VELLUM_API_KEY=your_vellum_api_key_here
LITELLM_API_KEY=your_litellm_api_key_here

# Security Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8501
ALLOWED_HOSTS=localhost,127.0.0.1
DEBUG=false
LOG_LEVEL=INFO
SECRET_KEY=change_this_in_production_use_openssl_rand_hex_32

# Alerting Configuration
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
OPSGENIE_API_KEY=your_opsgenie_api_key_here

# Budget Configuration
BUDGET_CONFIG_PATH=config/budget-rules.yml
MAX_MONTHLY_BUDGET=1000.00
COST_ALERT_THRESHOLD=0.8
MODEL_SWAP_THRESHOLD=0.9

# Monitoring Configuration
GRAFANA_ADMIN_PASSWORD=admin
PROMETHEUS_RETENTION=30d
METRICS_ENABLED=true

# Redis Configuration (for caching and rate limiting)
REDIS_URL=redis://localhost:6379/0

# Feature Flags
ENABLE_BUDGET_ALERTS=true
ENABLE_MODEL_SWAPPING=true
ENABLE_METRICS_EXPORT=true
ENABLE_SECURITY_SCANNING=true

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://localhost:8501

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=20

# Deployment Configuration
ENVIRONMENT=development
SERVICE_PORT=8000
WORKERS=4

# Production Security (set these in production)
# API_KEYS=key1:hash1,key2:hash2  # Format: name:sha256_hash
# JWT_SECRET_KEY=your_jwt_secret_key_for_token_signing
# ENCRYPTION_KEY=your_32_character_encryption_key